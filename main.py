import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from keep_alive import keep_alive
from collections import Counter
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import asyncio
from dotenv import load_dotenv

load_dotenv()
logging.basicConfig(level=logging.INFO)

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())


# –í–∞—à–∞ ID
ADMIN_ID = os.getenv('ADMIN_ID')

# –ó–∞–ø–∏—Ç–∞–Ω–Ω—è
questions = [
    "1. –©–æ –≤–∞—Å –Ω–∞–π–±—ñ–ª—å—à–µ —Ü—ñ–∫–∞–≤–∏—Ç—å —É —Å—Ñ–µ—Ä—ñ –Ü–¢?\n"
    "   a) –†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤\n"
    "   b) –ü—Ä–æ—î–∫—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º\n"
    "   c) –†–æ–±–æ—Ç–∞ –∑—ñ —à—Ç—É—á–Ω–∏–º —ñ–Ω—Ç–µ–ª–µ–∫—Ç–æ–º —Ç–∞ —Å–∫–ª–∞–¥–Ω–∏–º–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏\n"
    "   d) –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É —Ç–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ –¥–∞–Ω–∏—Ö\n"
    "   e) –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –ø—Ä–æ—Ü–µ—Å—ñ–≤ —Ç–∞ —Ä–æ–±–æ—Ç–∞ –∑ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ-—ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏\n"
    "   f) –ê–Ω–∞–ª—ñ–∑ –¥–∞–Ω–∏—Ö —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –±—ñ–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—ñ–≤\n",
    
    "2. –Ø–∫–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∞–º –∑–¥–∞—î—Ç—å—Å—è –Ω–∞–π–±—ñ–ª—å—à –∑–∞—Ö–æ–ø–ª—é—é—á–∏–º?\n"
    "   a) –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤ —Ç–∞ –≤–µ–±-—Å–µ—Ä–≤—ñ—Å—ñ–≤\n"
    "   b) –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º —Ç–∞ –º–µ—Ä–µ–∂\n"
    "   c) –ü—Ä–æ—î–∫—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É\n"
    "   d) –í–∏—è–≤–ª–µ–Ω–Ω—è —Ç–∞ –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∞—Ç–∞–∫–∞–º –Ω–∞ —Å—É—á–∞—Å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö\n"
    "   e) –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏–∑–æ–≤–∞–Ω–∏—Ö —Å–∏—Å—Ç–µ–º —Ç–∞ \"—Ä–æ–∑—É–º–Ω–∏—Ö\" –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤\n"
    "   f) –ê–Ω–∞–ª—ñ–∑ –≤–µ–ª–∏–∫–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è –ø—Ä–∏–π–Ω—è—Ç—Ç—è –±—ñ–∑–Ω–µ—Å-—Ä—ñ—à–µ–Ω—å\n",
    
    "3. –Ø–∫–∞ –æ–±–ª–∞—Å—Ç—å –Ü–¢ –≤–∞–º –Ω–∞–π–±—ñ–ª—å—à–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è?\n"
    "   a) –†–æ–∑—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è —Ç–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º\n"
    "   b) –í–∏—Å–æ–∫–æ–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Ç–∞ –º–µ—Ä–µ–∂–µ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó\n"
    "   c) –ú–∞—à–∏–Ω–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è —Ç–∞ –Ω–µ–π—Ä–æ–Ω–Ω—ñ –º–µ—Ä–µ–∂—ñ\n"
    "   d) –ó–∞—Ö–∏—Å—Ç –¥–∞–Ω–∏—Ö —Ç–∞ –ø–æ—à—É–∫ –≤—Ä–∞–∑–ª–∏–≤–æ—Å—Ç–µ–π\n"
    "   e) –†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫–∞ —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è\n"
    "   f) –ë—ñ–∑–Ω–µ—Å-–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö\n",
    
    "4. –Ø–∫–∞ —Ä–æ–ª—å —É –∫–æ–º–∞–Ω–¥—ñ –≤–∞–º –Ω–∞–π–±—ñ–ª—å—à–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å?\n"
    "   a) –†–æ–∑—Ä–æ–±–Ω–∏–∫ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è\n"
    "   b) –°–∏—Å—Ç–µ–º–Ω–∏–π –∞—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä —Ç–∞ –º–µ—Ä–µ–∂–µ–≤–∏–π —ñ–Ω–∂–µ–Ω–µ—Ä\n"
    "   c) –°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç –∑ —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É\n"
    "   d) –§–∞—Ö—ñ–≤–µ—Ü—å –∑ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∏\n"
    "   e) –Ü–Ω–∂–µ–Ω–µ—Ä –∑ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó\n"
    "   f) –ë—ñ–∑–Ω–µ—Å-–∞–Ω–∞–ª—ñ—Ç–∏–∫\n",
    
    "5. –Ø–∫–∏–π –∞—Å–ø–µ–∫—Ç —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–º–ø'—é—Ç–µ—Ä–æ–º –≤–∞—Å –Ω–∞–π–±—ñ–ª—å—à–µ –ø—Ä–∏–≤–∞–±–ª—é—î?\n"
    "   a) –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏—Ö –∞–ª–≥–æ—Ä–∏—Ç–º—ñ–≤ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–∏—Ö\n"
    "   b) –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤–µ—Ä—ñ–≤ —Ç–∞ –º–µ—Ä–µ–∂–µ–≤–æ—ó —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏\n"
    "   c) –†–æ–∑—Ä–æ–±–∫–∞ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∏—Ö —Å–∏—Å—Ç–µ–º —Ç–∞ –∞–ª–≥–æ—Ä–∏—Ç–º—ñ–≤ –º–∞—à–∏–Ω–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è\n"
    "   d) –ó–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ —Ç–∞ –ø–æ—à—É–∫ –≤—Ä–∞–∑–ª–∏–≤–æ—Å—Ç–µ–π\n"
    "   e) –ü—Ä–æ—î–∫—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∏—Ö —Å–∏—Å—Ç–µ–º\n"
    "   f) –ê–Ω–∞–ª—ñ–∑ –¥–∞–Ω–∏—Ö —Ç–∞ –ø–æ–±—É–¥–æ–≤–∞ –ø—Ä–æ–≥–Ω–æ—Å—Ç–∏—á–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π\n",
    
    "6. –Ø–∫–∞ –∫–Ω–∏–≥–∞ –≤–∞—Å –±–∏ –Ω–∞–π–±—ñ–ª—å—à–µ –∑–∞—Ü—ñ–∫–∞–≤–∏–ª–∞?\n"
    "   a) \"–ß–∏—Å—Ç–∏–π –∫–æ–¥\" –†–æ–±–µ—Ä—Ç–∞ –ú–∞—Ä—Ç—ñ–Ω–∞\n"
    "   b) \"–ö–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ –º–µ—Ä–µ–∂—ñ\" –ï–Ω–¥—Ä—é –¢–∞–Ω–µ–Ω–±–∞—É–º–∞\n"
    "   c) \"–®—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç: —Å—É—á–∞—Å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥\" –°—Ç—é–∞—Ä—Ç–∞ –†–∞—Å—Å–µ–ª–∞\n"
    "   d) \"–ú–∏—Å—Ç–µ—Ü—Ç–≤–æ –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç—ñ\" –ö–µ–≤—ñ–Ω–∞ –ú–∏—Ç–Ω–∏–∫–∞\n"
    "   e) \"–Ü–Ω–¥—É—Å—Ç—Ä—ñ—è 4.0: –ß–µ—Ç–≤–µ—Ä—Ç–∞ –ø—Ä–æ–º–∏—Å–ª–æ–≤–∞ —Ä–µ–≤–æ–ª—é—Ü—ñ—è\" –ö–ª–∞—É—Å–∞ –®–≤–∞–±–∞\n"
    "   f) \"–ù–∞—É–∫–∞ –ø—Ä–æ –¥–∞–Ω—ñ. –í—ñ–¥ —Ç–µ–æ—Ä—ñ—ó –¥–æ –ø—Ä–∞–∫—Ç–∏–∫–∏\" –ö–µ—Ç—ñ –û'–ù—ñ–ª\n",
    
    "7. –Ø–∫–µ —Ö–æ–±—ñ –≤–∞–º –Ω–∞–π–±—ñ–ª—å—à–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å?\n"
    "   a) –†–æ–∑—Ä–æ–±–∫–∞ –≤–ª–∞—Å–Ω–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤ —Ç–∞ —ñ–≥–æ—Ä\n"
    "   b) –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –¥–æ–º–∞—à–Ω—å–æ—ó –º–µ—Ä–µ–∂–µ–≤–æ—ó —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏\n"
    "   c) –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∞—Ç-–±–æ—Ç—ñ–≤ —Ç–∞ —Å–∏—Å—Ç–µ–º —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –æ–±—Ä–∞–∑—ñ–≤\n"
    "   d) –£—á–∞—Å—Ç—å —É –∑–º–∞–≥–∞–Ω–Ω—è—Ö –∑ –∫–æ–º–ø‚Äô—é—Ç–µ—Ä–Ω–æ—ó –±–µ–∑–ø–µ–∫–∏, –≤–∏—è–≤–ª–µ–Ω–Ω—è —Ñ—ñ—à–∏–Ω–≥—É\n"
    "   e) –ö–æ–Ω—Å—Ç—Ä—É—é–≤–∞–Ω–Ω—è —Ä–æ–±–æ—Ç—ñ–≤ —Ç–∞ \"—Ä–æ–∑—É–º–Ω–∏—Ö\" –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤\n"
    "   f) –ê–Ω–∞–ª—ñ–∑ –¥–∞–Ω–∏—Ö —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ–π\n"
]

user_answers = {}
user_data = {}

def get_phone_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    phone_button = KeyboardButton("–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    markup.add(phone_button)
    return markup

def get_start_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ü–æ—ó—Ö–∞–ª–∏! üöÄ"))
    return markup

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–º–µ–Ω—ñ
@dp.message_handler(lambda message: message.chat.id in user_data and user_data[message.chat.id]['name'] is None)
async def get_name(message: types.Message):
    user_data[message.chat.id]['name'] = message.text
    await message.answer("–¢–µ–ø–µ—Ä –ø–æ–¥—ñ–ª–∏—Å—è, –±—É–¥—å –ª–∞—Å–∫–∞, —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É.", reply_markup=get_phone_keyboard())

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
@dp.message_handler(content_types=types.ContentType.CONTACT)
async def get_phone(message: types.Message):
    if message.contact and message.chat.id in user_data:
        user_data[message.chat.id]['phone'] = message.contact.phone_number
        await message.answer("–î—è–∫—É—é! –¢–µ–ø–µ—Ä –Ω–∞—Ç–∏—Å–Ω–∏ '–ü–æ—ó—Ö–∞–ª–∏! üöÄ', —â–æ–± –ø–æ—á–∞—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è.", reply_markup=get_start_keyboard())
    else:
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–æ–º–∞–Ω–¥–æ—é /start –¥–ª—è –ø–æ—á–∞—Ç–∫—É.")

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    user_info = (
        f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:\n"
        f"ID: {message.from_user.id}\n"
        f"–Ü–º'—è: {message.from_user.first_name}\n"
        f"–ü—Ä—ñ–∑–≤–∏—â–µ: {message.from_user.last_name}\n"
        f"–Æ–∑–µ—Ä–Ω–µ–π–º: {message.from_user.username}\n"
        f"–ú–æ–≤–∞: {message.from_user.language_code}\n"
        f"–ß–∞—Ç ID: {message.chat.id}\n"
        f"–¢–∏–ø —á–∞—Ç—É: {message.chat.type}\n"
    )
    
    await bot.send_message(ADMIN_ID, user_info)  # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∞–¥–º—ñ–Ω—É
    
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ —ñ–∑ –≤–∏–±–æ—Ä–æ–º –Ü–¢-—à–∫–æ–ª–∏, —è–∫–∞ –Ω–∞–π–∫—Ä–∞—â–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç–≤–æ—ó–º –∑–¥—ñ–±–Ω–æ—Å—Ç—è–º.")
    await asyncio.sleep(1)
    await message.answer("–Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?")
    user_data[message.chat.id] = {'answers': [], 'name': None, 'phone': None}


# –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
def get_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("a"), KeyboardButton("b"))
    markup.add(KeyboardButton("c"), KeyboardButton("d"))
    markup.add(KeyboardButton("e"), KeyboardButton("f"))
    return markup

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
def calculate_result(answers):
    schools = {
        'a': '–®–∫–æ–ª–∞ —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—ó –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è',
        'b': '–®–∫–æ–ª–∞ –≤–∏—Å–æ–∫–æ–µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏—Ö –∫–æ–º–ø\'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º —Ç–∞ –º–µ—Ä–µ–∂—ñ',
        'c': '–®–∫–æ–ª–∞ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∏—Ö –∫–æ–º–ø\'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º',
        'd': '–®–∫–æ–ª–∞ –µ—Ç–∏—á–Ω–∏—Ö —Ö–∞–∫–µ—Ä—ñ–≤',
        'e': '–®–∫–æ–ª–∞ –°–º–∞—Ä—Ç-—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π —Ç–∞ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫–∏',
        'f': '–®–∫–æ–ª–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏ –±—ñ–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å—ñ–≤'
    }

    answer_counts = Counter(answers)
    max_count = max(answer_counts.values())
    most_common_answers = [
        schools[answer] for answer, count in answer_counts.items()
        if count == max_count
    ]

    if len(most_common_answers) == 1:
        return f"–í–∞–º –Ω–∞–π–±—ñ–ª—å—à–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å: {most_common_answers[0]}"
    else:
        return f"–í–∞–º –Ω–∞–π–±—ñ–ª—å—à–µ –ø—ñ–¥—Ö–æ–¥—è—Ç—å: {', '.join(most_common_answers)}"
    


# –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def send_user_data(message, answers):
    user_info = user_data.get(message.chat.id, {})
    username = f"@{message.from_user.username}" if message.from_user.username else f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id}"
    name = user_info.get('name', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    phone = user_info.get('phone', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    result = calculate_result(answers)
    
    msg = (
        f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {username}\n"
        f"–Ü–º'—è: {name}\n"
        f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone}\n"
        f"–í—ñ–¥–ø–æ–≤—ñ–¥—ñ: {', '.join(answers)}\n"
        f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
    )
    await bot.send_message(ADMIN_ID, msg)

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ—ó—Ö–∞–ª–∏!"
@dp.message_handler(lambda message: message.text == "–ü–æ—ó—Ö–∞–ª–∏! üöÄ")
async def start_questions(message: types.Message):
    if user_data[message.chat.id]['name'] is None or user_data[message.chat.id]['phone'] is None:
        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è.")
        return
    user_answers[message.chat.id] = []
    await message.answer(questions[0], reply_markup=get_keyboard())

# –û–±—Ä–æ–±–Ω–∏–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
@dp.message_handler(lambda message: message.text.lower() in ['a', 'b', 'c', 'd', 'e', 'f'])
async def handle_answer(message: types.Message):
    current_answers = user_answers[message.chat.id]
    current_question_index = len(current_answers)

    if current_question_index < len(questions):
        current_answers.append(message.text.lower())
        if current_question_index + 1 < len(questions):
            await message.answer(questions[current_question_index + 1], reply_markup=get_keyboard())
        else:
            result = calculate_result(current_answers)
            await message.answer(result)
            await send_user_data(message, current_answers)
            del user_answers[message.chat.id]
            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–Ω–æ–≤—É
            await message.answer("–©–æ–± –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–Ω–æ–≤—É, –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–≤–µ–¥—ñ—Ç—å /start.")



async def main():
    while True:
        try:
            await dp.start_polling()
        except Exception as e:
            logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å polling: {e}")
            await asyncio.sleep(15)

if __name__ == '__main__':
    keep_alive()
    asyncio.run(main())